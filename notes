#!/bin/bash
SCRIPT="$0"

readonly DIRECTORY="${HOME}/Documents/Notes"
readonly EDITOR="nano"
readonly FILE_MANAGER="nautilus"

function help() {
    printf "notes NOTE\n"
    printf "\t-h|--help                 Show this help menu\n"
    printf "\t-l|--list                 List all the notes\n"
    printf "\t-c|--cat                  Cat a note\n"
    printf "\t-d|--delete [NOTE]        Delete note\n"
    printf "\t-o|--open-dir             Open the notes directory\n"
    printf "\t--config                  Show the configuration\n"
    printf "\t--set-dir [DIR]           Set the notes directory\n"
    printf "\t--set-editor [EDITOR]     Set the text editor\n"
    printf "\t--set-file-man [MANAGER]  Set the file manager\n"
}

function config() {
    printf "Configuration:\n"
    printf "\tInstall Location = ${SCRIPT}\n"
    printf "\tNotes Directory  = ${DIRECTORY}\n"
    printf "\tEditor           = ${EDITOR}\n"
    printf "\tFile Manager     = ${FILE_MANAGER}\n"
}

if [[ $# == 0 ]]; then
    help
fi

while [[ $# -gt 0 ]]
do
key="$1"
positional_args=()
case $key in
    -h|--help)
    help
    shift
    ;;
    --config)
    config
    shift
    ;;
    --set-dir)
    set_dir="$2"
    shift
    shift
    ;;
    --set-editor)
    set_editor="$2"
    shift
    shift
    ;;
    --set-file-man)
    set_file_man="$2"
    shift
    shift
    ;;
    -d|--delete)
    delete="$2"
    shift
    shift
    ;;
    -l|--list)
    list="please"
    shift
    ;;
    -o|--open-dir)
    open_dir="please"
    shift
    ;;
    -c|--cat)
    cat="$2"
    shift
    shift
    ;;
    *)
    file="$1"
    shift
    ;;
esac
done

# Yes these modify THIS script, it makes life easy
if [[ ! -z $set_dir ]]; then
    if [[ ! -d "${set_dir}" ]]; then
        mkdir -p "${set_dir}"
    fi
    sed -i '0,/DIRECTORY/s|DIRECTORY=.*|DIRECTORY="'"${set_dir}"'"|' $SCRIPT
fi

if [[ ! -z $set_editor ]]; then
    if [ "$(id -u)" != "0" ]; then
        echo "You need to be root to change the editor" # For safety
        # This is because EDITOR is an unclean variable when called
    else
        sed -i '0,/EDITOR/s|EDITOR=.*|EDITOR="'"${set_editor}"'"|' $SCRIPT
    fi
fi

if [[ ! -z $set_editor ]]; then
    if [ "$(id -u)" != "0" ]; then
        echo "You need to be root to change the file manager" # For safety
        # This is because MANAGER is an unclean variable when called
    else
        sed -i '0,/FILE_MANAGER/s|FILE_MANAGER=.*|FILE_MANAGER="'"${set_file_man}"'"|' $SCRIPT
    fi
fi

if [[ ! -z $open_dir ]]; then
    command -v ${FILE_MANAGER} > /dev/null
    if [[ "$?" == "0" ]]; then
        $FILE_MANAGER "${DIRECTORY}"
    else
        echo "Expecting ${FILE_MANAGER}, change via --set-file-man flag"
    fi
fi

if [[ ! -z $list ]]; then
    ls "${DIRECTORY}/"
fi

if [[ ! -z $delete ]]; then
    rm "${DIRECTORY}/${delete}"
fi

if [[ ! -z $cat ]]; then
    cat "${DIRECTORY}/${cat}"
fi

if [[ ! -z $file ]]; then
    command -v ${EDITOR}
    if [[ "$?" == "0" ]]; then
        $EDITOR "${DIRECTORY}/${file}"
    else
        echo "Expecting ${EDITOR}, change via --set-editor flag"
    fi
    
fi

